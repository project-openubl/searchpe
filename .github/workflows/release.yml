name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
      next:
        description: "Next version"
        required: false

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
          cache: maven
      - name: Set release version
        id: version
        run: |
          mvn -B versions:set versions:commit -DnewVersion=$RELEASE_VERSION
          git config --global user.email "project.openubl.preview.bot@gmail.com"
          git config --global user.name "Project-Openubl Bot"
          git commit --allow-empty -a -m "üèÅ Releasing version $RELEASE_VERSION"
          git push origin HEAD:master        

  build-jvm:
    needs: [ version ]
    name: Build JVM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.version }}

      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
          cache: maven

      - name: Build and Create distribution
        run: mvn -B --file pom.xml package -DskipTests -P ui,distribution
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            target/distributions/*.zip
            target/distributions/*.tar.gz

  build-container:
    needs: [ version ]
    name: Build Container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.version }}

      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
          cache: maven

      - name: Build container image
        run: |
          mvn -U -B package --file pom.xml -DskipTests \
          -Dquarkus.native.container-build=true \
          -Dquarkus.container-image.push=false \
          -Dquarkus.container-image.build=true \
          -Dquarkus.container-image.registry=quay.io \
          -Dquarkus.container-image.group=projectopenubl \
          -Dquarkus.container-image.name=searchpe \
          -Dquarkus.container-image.tag=latest \
          -P native,ui
      - name: Save container image
        run: docker save -o searchpe-container-image.tar quay.io/projectopenubl/searchpe:latest
      - name: Upload container image
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: searchpe-container-image.tar

  release:
    needs: [ build-jvm, build-container ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.version }}
          fetch-depth: 0

      # Create the openapi.yaml files
      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
          cache: maven
      - name: Build with Maven
        run: mvn package -DskipTests

      # checkout will clobber downloaded artifacts
      # we have to download them again
      - name: Download all build artifacts
        uses: actions/download-artifact@v3

      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}
      - name: Push images to registry
        run: |
          # Load images from .tar
          docker load -i artifacts/searchpe-container-image.tar

          # Identify major version
          major=$(echo "${{ github.event.inputs.version }}" | cut -d. -f1)
          
          # Tag images
          docker tag quay.io/projectopenubl/searchpe:latest quay.io/projectopenubl/searchpe:latest
          docker tag quay.io/projectopenubl/searchpe:latest quay.io/projectopenubl/searchpe:v$major
          docker tag quay.io/projectopenubl/searchpe:latest quay.io/projectopenubl/searchpe:v${{ github.event.inputs.version }}
          
          # Push images
          docker image push --all-tags quay.io/projectopenubl/searchpe

      - name: JReleaser - release
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          JRELEASER_PROJECT_VERSION: ${{ steps.version.outputs.RELEASE_VERSION }}
          JRELEASER_PRERELEASE_PATTERN: .*(?:Alpha|alpha|Beta|beta)[0-9]
          JRELEASER_ZULIP_API_KEY: ${{ secrets.JRELEASER_ZULIP_API_KEY }}
          JRELEASER_TWITTER_CONSUMER_KEY: ${{ secrets.JRELEASER_TWITTER_CONSUMER_KEY }}
          JRELEASER_TWITTER_CONSUMER_SECRET: ${{ secrets.JRELEASER_TWITTER_CONSUMER_SECRET }}
          JRELEASER_TWITTER_ACCESS_TOKEN: ${{ secrets.JRELEASER_TWITTER_ACCESS_TOKEN }}
          JRELEASER_TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.JRELEASER_TWITTER_ACCESS_TOKEN_SECRET }}
          JRELEASER_SLACK_TOKEN: ${{ secrets.JRELEASER_SLACK_TOKEN }}
          JRELEASER_SLACK_WEBHOOK: ${{ secrets.JRELEASER_SLACK_WEBHOOK }}
          JRELEASER_MAIL_PASSWORD: ${{ secrets.JRELEASER_MAIL_PASSWORD }}
          JRELEASER_ARTICLE_GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      - name: JReleaser - generate log
        shell: bash
        run: tar -czvf jreleaser-log.tgz out/
      - name: JReleaser - upload log
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-log
          path: 'jreleaser-log.tgz'

      - uses: azure/setup-helm@v1
      - name: Helm
        run: |
          mvn process-resources
          helm plugin install https://github.com/chartmuseum/helm-push
          helm repo add --username ${{ secrets.GITLAB_REGISTRY_USERNAME }} --password ${{ secrets.GITLAB_REGISTRY_TOKEN }} openubl https://gitlab.com/api/v4/projects/36554180/packages/helm/stable
          helm cm-push --force target/helm openubl

      - name: Set next version
        env:
          NEXT_VERSION: ${{ github.event.inputs.next }}
        run: |
          mvn -B versions:set versions:commit -DnewVersion=$NEXT_VERSION
          git config --global user.email "project.openubl.preview.bot@gmail.com"
          git config --global user.name "Project-Openubl Bot"
          git commit -a -m "‚¨ÜÔ∏è  Next version $NEXT_VERSION"
          git push origin HEAD:master
