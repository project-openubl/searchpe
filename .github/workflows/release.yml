name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        default: "E.g. 4.0.0"
        required: true
      next:
        description: "Next version"
        default: "E.g. 5.0.0-SNAPSHOT"
        required: false
      skip_publish_operator:
        description: Whether or not skip the publication of the operator
        type: boolean
        default: false
        required: false

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven
      - name: Set release version ${{ github.event.inputs.version }}
        run: |
          mvn -B versions:set versions:commit -DnewVersion=$RELEASE_VERSION
        env:
          RELEASE_VERSION: ${{ github.event.inputs.version }}
      - name: Commit and Push
        uses: project-openubl/.github/actions/commit@master
        with:
          commit_message: "üèÅ Releasing version ${{ github.event.inputs.version }}"

  application:
    needs: [ prepare ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}
      - name: Release container images
        run: |
          mvn -U -B package -DskipTests \
          -Dquarkus.native.container-build=true \
          -Dquarkus.container-image.push=false \
          -Dquarkus.container-image.build=true \
          -Dquarkus.container-image.registry=quay.io \
          -Dquarkus.container-image.group=projectopenubl \
          -Dquarkus.container-image.name=searchpe \
          -Dquarkus.container-image.tag=latest \
          -P native,ui \
          -f application

          # Identify major version
          major=$(echo "${{ github.event.inputs.version }}" | cut -d. -f1)

          # Tag images
          docker tag quay.io/projectopenubl/searchpe:latest quay.io/projectopenubl/searchpe:latest
          docker tag quay.io/projectopenubl/searchpe:latest quay.io/projectopenubl/searchpe:v$major
          docker tag quay.io/projectopenubl/searchpe:latest quay.io/projectopenubl/searchpe:v${{ github.event.inputs.version }}

          # Push images
          docker image push --all-tags quay.io/projectopenubl/searchpe

  helm:
    needs: [ prepare ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven
      - uses: azure/setup-helm@v3
      - name: Release Helm
        run: |
          mvn package -DskipTests
          mvn process-resources
          
          helm plugin install https://github.com/chartmuseum/helm-push
          helm repo add \
          --username ${{ secrets.GITLAB_REGISTRY_USERNAME }} \
          --password ${{ secrets.GITLAB_REGISTRY_TOKEN }} \
          openubl https://gitlab.com/api/v4/projects/36554180/packages/helm/stable
          helm cm-push --force application/target/helm openubl

  operator:
    needs: [ prepare ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}
      - name: Release container images
        run: |
          mvn -U -B package -DskipTests \
          -Dquarkus.native.container-build=true \
          -Dquarkus.container-image.push=false \
          -Dquarkus.container-image.build=true \
          -Dquarkus.container-image.registry=quay.io \
          -Dquarkus.container-image.group=projectopenubl \
          -Dquarkus.container-image.name=searchpe-operator \
          -Dquarkus.container-image.tag=latest \
          -Dquarkus.operator-sdk.bundle.package-name=searchpe-operator \
          -Dquarkus.operator-sdk.bundle.channels=alpha \
          -Doperator.searchpe.image=quay.io/projectopenubl/searchpe:v${{ github.event.inputs.version }} \
          -P native \
          -f operator

          # Tag images
          docker tag quay.io/projectopenubl/searchpe-operator:latest quay.io/projectopenubl/searchpe-operator:v${{ github.event.inputs.version }}

          # Push images
          docker image push --all-tags quay.io/projectopenubl/searchpe-operator

  publish-operator:
    if: ${{ github.event.inputs.skip_publish_operator == false }}
    needs: [ operator ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
          path: searchpe
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven
      - name: Prepare files
        working-directory: searchpe
        run: |
          sudo apt-get install -y groovy

          mvn package -DskipTests \
          -Doperator.searchpe.image=quay.io/projectopenubl/searchpe:v${{ github.event.inputs.version }} \
          -Dquarkus.operator-sdk.bundle.package-name=searchpe-operator \
          -Dquarkus.operator-sdk.bundle.channels=alpha \
          -f operator

          groovy scripts/enrichCSV.groovy \
          operator/target/bundle/searchpe-operator/manifests/searchpe-operator.clusterserviceversion.yaml \
          ${{ github.event.inputs.version }}
      - name: Create PR community-operators
        uses: project-openubl/.github/actions/pull-request-operator@master
        with:
          operator_name: searchpe-operator
          operator_version: ${{ github.event.inputs.version }}
          operator_bundle_directory: searchpe/operator/target/bundle/searchpe-operator
          pr_body_template_url: https://raw.githubusercontent.com/project-openubl/community-operators/main/docs/pull_request_template.md
          repository_origin_owner: project-openubl
          repository_origin_name: community-operators
          repository_upstream_owner: k8s-operatorhub
          repository_upstream_name: community-operators
          repository_default_branch: main
          github_pat: ${{ secrets.GH_PAT }}

  release:
    needs: [ application, helm, publish-operator ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven
      - name: Build distribution
        run: mvn package -DskipTests -P ui,distribution -f application

      - name: JReleaser - release
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          JRELEASER_PROJECT_VERSION: ${{ github.event.inputs.version }}
          JRELEASER_PRERELEASE_PATTERN: .*(?:Alpha|alpha|Beta|beta)[0-9]
          JRELEASER_ZULIP_API_KEY: ${{ secrets.JRELEASER_ZULIP_API_KEY }}
          JRELEASER_TWITTER_CONSUMER_KEY: ${{ secrets.JRELEASER_TWITTER_CONSUMER_KEY }}
          JRELEASER_TWITTER_CONSUMER_SECRET: ${{ secrets.JRELEASER_TWITTER_CONSUMER_SECRET }}
          JRELEASER_TWITTER_ACCESS_TOKEN: ${{ secrets.JRELEASER_TWITTER_ACCESS_TOKEN }}
          JRELEASER_TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.JRELEASER_TWITTER_ACCESS_TOKEN_SECRET }}
          JRELEASER_SLACK_TOKEN: ${{ secrets.JRELEASER_SLACK_TOKEN }}
          JRELEASER_SLACK_WEBHOOK: ${{ secrets.JRELEASER_SLACK_WEBHOOK }}
          JRELEASER_MAIL_PASSWORD: ${{ secrets.JRELEASER_MAIL_PASSWORD }}
          JRELEASER_ARTICLE_GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      - name: JReleaser - generate log
        if: always()
        shell: bash
        run: tar -czvf jreleaser-log.tgz out/
      - name: JReleaser - upload log
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-log
          path: 'jreleaser-log.tgz'

      - name: Commit and Push
        uses: project-openubl/.github/actions/commit@master
        with:
          commit_message: "‚¨ÜÔ∏è Next version ${{ github.event.inputs.next }}"
